name: CI

on: [push]

jobs:
  # NOTE: If we wanted to, we could split this out into two jobs:
  # 1: Python job that lints & checks the Python source
  # 2: JS job that runs Prettier, handles any serverless setup
  #
  # However, `check` is fast enough in one large step.
  ci:
    runs-on: ubuntu-latest
    steps:
      #----------------------------------------------
      # Check out repo and set-up Python
      #----------------------------------------------
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      #----------------------------------------------
      # Install & configure poetry  -----
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      #----------------------------------------------
      # Load cached venv if cache exists
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      # Skip installing dependencies if cache exists
      #----------------------------------------------
      - name: Mark dev dependencies as installed
        run: touch .poetry_dev_up_to_date
        if: steps.cached-poetry-dependencies.outputs.cache-hit == 'true'
      #----------------------------------------------
      # Install node (for Prettier & serverless)
      #----------------------------------------------
      - uses: actions/setup-node@v1
        with:
          node-version: "14"
      #----------------------------------------------
      # Finally, run tests, linters, etc.
      #----------------------------------------------
      - name: Full check
        run: make check
